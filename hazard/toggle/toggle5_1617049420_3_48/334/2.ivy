#lang ivy1.7

attribute method = mc

type bv8
interpret bv8 -> bv[8]

var rand : bool
var t0 : bv8
var l0: bv8
var t1 : bv8
var l1: bv8
var t2 : bv8
var l2: bv8

object spec = {

  before administrate {
    require laci_def.laci >= 20 | tetr_def.tetr <= 40;
  }

  action administrate = {

    t2 := t1;
    l2 := l1;
    t1 := t0;
    l1 := l0;
    t0 := tetr_def.tetr;
    l0 := laci_def.laci;

    rand := *;
    if rand {
      call tetr_def.update_tetr;
    }
    else {
      call laci_def.update_laci;
    };
    
    assume ~(laci_def.laci >= 20 | tetr_def.tetr <= 40) -> (laci_def.laci = 2 & tetr_def.tetr = 44);
  } #end administrate
  
  export administrate

} #end spec


object tetr_def = {
  
  var tetr : bv8
  
  after init {
    tetr := 0;
  }
  
  action update_tetr = {
    rand := *;
    if (tetr = 0) {
      if rand {
        tetr := tetr + 10;
      }
    }
    else if (tetr > 200) {
      if rand {
        tetr := tetr - 1;
      }
    }
    else if tetr > 0 {
      #left at rand until I find a better solution
      if rand {
        tetr := tetr + 10;
      }
      else {
        tetr := tetr - 1;
      }
    };
  } #end update_tetr
  
} #end tetr_def


object laci_def = {
  
  var laci : bv8
  
  after init {
    laci := 60;
  }
  
  action update_laci = {
    rand := *;
    if laci = 0 {
      if rand {
        laci := laci + 10;
      }
    }
    else if (laci > 200) {
      if rand {
        laci := laci - 1;
      }
    }
    else if laci > 0 {
      if rand {
        laci := laci + 10;
      }
      else {
        laci := laci - 1;
      }
    };
  } #end update_laci

} #end tetR_def


invariant (laci_def.laci >= 20 | tetr_def.tetr <= 40) | (t0 = 34 & l0 = 2 & t1 = 34 & l1 = 3 & t2 = 34 & l2 = 4) | (t0 = 34 & l0 = 2 & t1 = 24 & l1 = 2 & t2 = 14 & l2 = 2)